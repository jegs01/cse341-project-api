{
  "swagger": "2.0",
  "info": {
    "tittle": "Animal Api",
    "description": "Animal Api",
    "version": "1.0.0",
    "title": "REST API"
  },
  "host": "cse341-project-api.onrender.com",
  "basePath": "/",
  "schemes": [
    "https",
    "http"
  ],
  "paths": {
    "/": {
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/animal/": {
      "get": {
        "tags": [
          "Animal"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Animal"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Animal details to create",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Sample Animal"
                },
                "species": {
                  "type": "string",
                  "example": "Mammal"
                },
                "habitat": {
                  "type": "string",
                  "example": "Forest"
                },
                "extinct": {
                  "type": "boolean",
                  "example": false
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/animal/{animalId}": {
      "get": {
        "tags": [
          "Animal"
        ],
        "description": "",
        "parameters": [
          {
            "name": "animalId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the animal to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Animal"
        ],
        "description": "",
        "parameters": [
          {
            "name": "animalId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Animal details to update",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "Updated Animal Name"
                },
                "species": {
                  "type": "string",
                  "example": "Reptile"
                },
                "habitat": {
                  "type": "string",
                  "example": "Desert"
                },
                "extinct": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Animal"
        ],
        "description": "",
        "parameters": [
          {
            "name": "animalId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the animal to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/animal/search": {
      "post": {
        "tags": [
          "Animal"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Body with search parameters for animals",
            "required": false,
            "schema": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string",
                  "example": "object"
                },
                "properties": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "habitat": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "string"
                        }
                      }
                    },
                    "extinct": {
                      "type": "object",
                      "properties": {
                        "type": {
                          "type": "string",
                          "example": "boolean"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/zoo/": {
      "get": {
        "tags": [
          "Zoo"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Zoo"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Zoo animal details to add",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "animalId": {
                  "type": "string",
                  "example": "12345"
                },
                "location": {
                  "type": "string",
                  "example": "Section A"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/zoo/{animalId}": {
      "get": {
        "tags": [
          "Zoo"
        ],
        "description": "",
        "parameters": [
          {
            "name": "animalId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the animal in the zoo inventory"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Zoo"
        ],
        "description": "",
        "parameters": [
          {
            "name": "animalId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Zoo animal location details to update",
            "schema": {
              "type": "object",
              "properties": {
                "location": {
                  "type": "string",
                  "example": "Section B"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Zoo"
        ],
        "description": "",
        "parameters": [
          {
            "name": "animalId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the animal to remove from the zoo inventory"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/user/": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "User details to create",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "sampleUser"
                },
                "email": {
                  "type": "string",
                  "example": "sampleuser@example.com"
                },
                "firstName": {
                  "type": "string",
                  "example": "Sample"
                },
                "lastName": {
                  "type": "string",
                  "example": "User"
                },
                "role": {
                  "type": "string",
                  "example": "user"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/user/{username}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Username of the user to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "description": "",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "User details to update",
            "schema": {
              "type": "object",
              "properties": {
                "username": {
                  "type": "string",
                  "example": "updatedUser"
                },
                "email": {
                  "type": "string",
                  "example": "updateduser@example.com"
                },
                "firstName": {
                  "type": "string",
                  "example": "Updated"
                },
                "lastName": {
                  "type": "string",
                  "example": "User"
                },
                "role": {
                  "type": "string",
                  "example": "admin"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "description": "",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Username of the user to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/staff/": {
      "post": {
        "tags": [
          "Staff"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "Staff member details to create",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "staffId": {
                  "type": "string",
                  "example": "STF001"
                },
                "name": {
                  "type": "string",
                  "example": "John Doe"
                },
                "position": {
                  "type": "string",
                  "example": "Manager"
                },
                "department": {
                  "type": "string",
                  "example": "Sales"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "get": {
        "tags": [
          "Staff"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/api/staff/{staffId}": {
      "get": {
        "tags": [
          "Staff"
        ],
        "description": "",
        "parameters": [
          {
            "name": "staffId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the staff member to retrieve"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "put": {
        "tags": [
          "Staff"
        ],
        "description": "",
        "parameters": [
          {
            "name": "staffId",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Staff member details to update",
            "schema": {
              "type": "object",
              "properties": {
                "staffId": {
                  "type": "string",
                  "example": "STF002"
                },
                "name": {
                  "type": "string",
                  "example": "Jane Comfort"
                },
                "position": {
                  "type": "string",
                  "example": "Team Lead"
                },
                "department": {
                  "type": "string",
                  "example": "Marketing"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      },
      "delete": {
        "tags": [
          "Staff"
        ],
        "description": "",
        "parameters": [
          {
            "name": "staffId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "ID of the staff member to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    }
  }
}